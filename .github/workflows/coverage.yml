name: Code Coverage
on:
  pull_request:
    types: [opened, edited, synchronize]
  push:
    branches: main
jobs:
  coverage:
    name: Code Coverage
    runs-on: ${{matrix.os}}-latest
    strategy:
      matrix:
        os: [ubuntu, windows, macos]
    steps:
      - name: Checkout
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # tag=v3
      - name: Authenticate GitHub CLI
        run: echo ${{github.token}} | gh auth login --with-token
      - name: Setup Rust Toolchain
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # renovate: tag=v1
        with:
          toolchain: nightly
          override: true
          profile: minimal
          components: llvm-tools-preview
      - name: Setup Shared Compilation Cache
        uses: baptiste0928/cargo-install@1883f6c4d045ccc14f3d20548e4f94e39b968e7d # tag=v1
        with:
          crate: sccache
      - name: Setup Cargo hack
        uses: bruxisma/setup-cargo-hack@1d7117a0b3be8457283a783e4065b7ba649c5d54 # renovate: tag=v1
      - name: Setup grcov
        uses: baptiste0928/cargo-install@1883f6c4d045ccc14f3d20548e4f94e39b968e7d # tag=v1
        with:
          crate: grcov
      - name: Setup Shared Cache Directory
        shell: bash
        run: |
          declare path="${HOME}/.cache/sccache"
          if test "${RUNNER_OS}" = "Windows"; then
            path=$(cygpath --windows "${path}")
          fi
          echo "SCCACHE_DIR=${path}" >> "${GITHUB_ENV}"
      - name: Restore Cargo Cache
        uses: actions/cache@48af2dc4a9e8278b89d7fa154b955c30c6aaab09 # tag=v3
        with:
          restore-keys: ${{runner.os}}-cargo-
          key: ${{runner.os}}-cargo-${{hashFiles('**/Cargo.lock')}}
          path: |
            ${{github.workspace}}/target
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            ~/.cargo/git
      - name: Restore sccache build artifacts
        uses: actions/cache@48af2dc4a9e8278b89d7fa154b955c30c6aaab09 # tag=v3
        with:
          restore-keys: ${{runner.os}}-nightly-coverage-
          key: ${{runner.os}}-nightly-coverage-${{hashFiles('**/Cargo.lock')}}
          path: ${{env.SCCACHE_DIR}}
      - name: Run Tests (coverage)
        uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505 # renovate: tag=v1
        with:
          command: hack
          args: test --profile=coverage --locked --each-feature
        env:
          LLVM_PROFILE_FILE: target/coverage/outcome-%p-%m.profraw
          RUSTC_WRAPPER: sccache
          RUSTDOCFLAGS: >-
            -Zinstrument-coverage
            -Zprofile
            -Zunstable-options
            --persist-doctests ${{github.workspace}}/target/coverage
          RUSTFLAGS: -Zinstrument-coverage -Zprofile
      - name: Collect Coverage
        run: >-
          grcov ${{github.workspace}}
          --binary-path ${{github.workspace}}/target/coverage
          --output-path ${{github.workspace}}/coverage.info
          --output-type lcov
          --source-dir ${{github.workspace}}
          --ignore "/*"
          --ignore "C:/*"
          --ignore "../*"
          --ignore-not-existing
          --branch
      - name: Check coverage.info exists
        run: test -f ${{github.workspace}}/coverage.info
      - name: Upload Code Coverage
        uses: codecov/codecov-action@e3c560433a6cc60aec8812599b7844a7b4fa0d71 # tag=v3
        with:
          fail_ci_if_error: true
          directory: ${{github.workspace}}
          files: coverage.info
      - name: Upload Code Coverage Artifact
        uses: actions/upload-artifact@6673cd052c4cd6fcf4b4e6e60ea986c889389535 # tag=v3
        with:
          name: ${{matrix.os}}-coverage.info
          path: coverage.info
          if-no-files-found: error
