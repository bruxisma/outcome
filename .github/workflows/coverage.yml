name: Code Coverage
on:
  pull_request:
    types: [opened, edited, synchronize]
  push:
    branches: main
jobs:
  coverage:
    name: Code Coverage
    runs-on: ${{matrix.os}}-latest
    strategy:
      matrix:
        os: [ubuntu, windows, macos]
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - name: Authenticate GitHub CLI
        run: echo ${{github.token}} | gh auth login --with-token
      - name: Setup Rust Toolchain and Tools
        uses: moonrepo/setup-rust@b8edcc56aab474d90c7cf0bb8beeaf8334c15e9f # v1
        with:
          bins: sccache, grcov, cargo-hack
          channel: nightly
          components: llvm-tools-preview
          cache-target: coverage
      - name: Setup Shared Cache Directory
        shell: bash
        run: |
          declare path="${HOME}/.cache/sccache"
          if test "${RUNNER_OS}" = "Windows"; then
            path=$(cygpath --windows "${path}")
          fi
          echo "SCCACHE_DIR=${path}" >> "${GITHUB_ENV}"
      - name: Restore sccache build artifacts
        uses: actions/cache@ab5e6d0c87105b4c9c2047343972218f562e4319 # v4
        with:
          restore-keys: ${{runner.os}}-nightly-coverage-
          key: ${{runner.os}}-nightly-coverage-${{hashFiles('**/Cargo.lock')}}
          path: ${{env.SCCACHE_DIR}}
      - name: Run Tests (coverage)
        run: cargo hack test --profile=coverage --feature-powerset
        env:
          LLVM_PROFILE_FILE: target/coverage/outcome-%p-%m.profraw
          RUSTC_WRAPPER: sccache
          RUSTDOCFLAGS: >-
            -C instrument-coverage
            -Zunstable-options
            --persist-doctests ${{github.workspace}}/target/coverage
          RUSTFLAGS: -C instrument-coverage
      - name: Collect Coverage
        run: >-
          grcov ${{github.workspace}}
          --binary-path ${{github.workspace}}/target/coverage
          --output-path ${{github.workspace}}/coverage.info
          --output-type lcov
          --source-dir ${{github.workspace}}
          --ignore "/*"
          --ignore "C:/*"
          --ignore "../*"
          --ignore-not-existing
          --branch
      - name: Check coverage.info exists
        run: test -f ${{github.workspace}}/coverage.info
      - name: Upload Code Coverage
        uses: codecov/codecov-action@54bcd8715eee62d40e33596ef5e8f0f48dbbccab # v4
        with:
          fail_ci_if_error: true
          directory: ${{github.workspace}}
          files: coverage.info
      - name: Upload Code Coverage Artifact
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4
        with:
          name: ${{matrix.os}}-coverage.info
          path: coverage.info
          if-no-files-found: error
