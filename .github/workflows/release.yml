name: Release
on:
  workflow_dispatch:
    inputs:
      level:
        description: What level of release to increment
        required: true
jobs:
  validate:
    name: Validate Release
    strategy:
      matrix:
        os: [ubuntu, windows, macos]
    runs-on: ${{matrix.os}}-latest
    steps:
      - name: Checkout
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # renovate: tag=v2
      - name: Setup Rust Toolchain
        uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # renovate: tag=v1
        with:
          toolchain: stable
          profile: minimal
      - name: Setup Cargo Hack
        uses: bruxisma/setup-cargo-hack@v1
      - name: Validate Publish
        run: cargo hack publish --dry-run --each-feature --locked
  publish:
    needs: [validate]
    name: Publish Crate
    runs-on: ubuntu-latest
    environment: release
    steps:
      - name: Checkout
        uses: actions/checkout@ec3a7ce113134d7a93b817d10a8272cb61118579 # renovate: tag=v2
      - name: Install Cargo Release
        uses: baptiste0928/cargo-install@v1
        with:
          crate: cargo-release
      - name: Configure Git User
        run: |
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
      - name: Publish Crate
        run: >-
          cargo release ${{github.event.inputs.level}}
          --token ${{secrets.CARGO_REGISTRY_TOKEN}}
          --dev-version
          --no-confirm
          --no-verify
          --execute
      - name: Get Crate Metadata
        shell: bash
        if: failure()
        id: metadata
        run: |
          declare query='.packages[] | select(.name | contains("outcome")).version'
          echo "::set-output name=version::$(cargo metadata --format-version=1 | jq -r "${query}")"
      - name: Yank On Failure
        shell: bash
        if: failure()
        run: >-
          cargo yank
          --vers ${{steps.metadata.outputs.version}}
          --token ${{secrets.CARGO_REGISTRY_TOKEN}}
      - name: Delete Git Tag
        shell: bash
        if: failure()
        run: git push --delete origin v${{steps.metadata.outputs.version}}
