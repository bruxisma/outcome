name: Release
on:
  push:
    tags: ['v*']
jobs:
  validate:
    name: Validate Release
    strategy:
      matrix:
        os: [ubuntu, windows, macos]
    runs-on: ${{matrix.os}}-latest
    steps:
      - name: Checkout
        uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4
      - name: Setup Rust Toolchain
        uses: moonrepo/setup-rust@b8edcc56aab474d90c7cf0bb8beeaf8334c15e9f # v1
        with:
          bins: cargo-hack
      - name: Validate Publish
        run: cargo hack publish --dry-run --each-feature --locked
  publish:
    needs: [validate]
    name: Publish Crate
    runs-on: ubuntu-latest
    environment: release
    steps:
      - name: Checkout
        uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f # v4
      - name: Set Git Branch
        run: git switch -c ${{github.ref_name}}
      - name: Install Cargo Release
        uses: baptiste0928/cargo-install@9f6037ed331dcf7da101461a20656273fa72abf0 # v3
        with:
          crate: cargo-release
      - name: Get Crate Version
        shell: bash
        id: metadata
        run: |
          declare query='.packages[] | select(.name | contains("outcome")).version'
          echo "::set-output name=version::$(cargo metadata --format-version=1 | jq -r "${query}")"
      - name: Verify Version
        run: test "v${{steps.metadata.outputs.version}}" = "${{github.ref_name}}"
      - name: Configure Git User
        run: |
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
      - name: Publish Crate
        run: >-
          cargo release
          --token ${{secrets.CARGO_REGISTRY_TOKEN}}
          --tag-name ${{github.ref_name}}
          --no-confirm
          --no-verify
          --no-push
          --no-tag
          --execute
      - name: Yank On Failure
        shell: bash
        if: failure()
        run: >-
          cargo yank
          --vers ${{steps.metadata.outputs.version}}
          --token ${{secrets.CARGO_REGISTRY_TOKEN}}
